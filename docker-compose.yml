networks:
  elastic:
    driver: bridge
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    networks:
      - elastic
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.1
    networks:
      - elastic
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5601/ || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
  
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.16.0
    networks:
      - elastic
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - "8200:8200"
    depends_on:
      - elasticsearch
    command: >
      apm-server -e
        -E apm-server.host=:8200
        -E setup.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E output.elasticsearch.username=elastic
        -E output.elasticsearch.password=changeme
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8200/ || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
  
  loggingexample.web:
    build:
      context: .
      dockerfile: LoggingExample.Web/Dockerfile
    networks:
      - elastic
    ports:
      - "5001:8080"
      - "8081:8081"
    depends_on:
      - elasticsearch
      - kibana
      - apm-server
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - "SeriLogConfig:ElasticUri=http://elasticsearch:9200"
      - "SeriLogConfig:ElasticUser=elastic"
      - "SeriLogConfig:ElasticPassword=changeme"
      - "ElasticApm:ServerUrls=http://apm-server:8200"
      - "ElasticApm:SecretToken=changeme"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/api/health-check || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  elasticsearch-data: