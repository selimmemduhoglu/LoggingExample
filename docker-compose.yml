version: '3.8'

networks:
  logging-network:
    driver: bridge

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    networks:
      - logging-network
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic1234
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    networks:
      - logging-network
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic1234
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.9
    networks:
      - logging-network
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - "8200:8200"
    depends_on:
      - elasticsearch
    command: >
      apm-server -e
        -E apm-server.host=:8200
        -E setup.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E output.elasticsearch.username=elastic
        -E output.elasticsearch.password=elastic1234
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:8200"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
 
  seq:
    image: datalust/seq:latest
    networks:
      - logging-network
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seq-data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  loggingexample.web:
    build:
      context: .
      dockerfile: LoggingExample.Web/Dockerfile
    networks:
      - logging-network
    ports:
      - "5001:8080"
    depends_on:
      - elasticsearch
      - seq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_URLS=http://+:8080
      - SeriLogConfig__ElasticUri=http://elasticsearch:9200
      - SeriLogConfig__ElasticUser=elastic
      - SeriLogConfig__ElasticPassword=elastic1234
      - ElasticApm__ServerUrls=http://apm-server:8200
      - ElasticApm__SecretToken=apmsecrettoken
      - Seq__ServerUrl=http://seq:5341
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:8080/api/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  elasticsearch-data:
  seq-data: