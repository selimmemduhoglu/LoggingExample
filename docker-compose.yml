version: '3.7'

networks:
  shared-network:
    name: my-shared-network
    driver: bridge

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    environment:
      - "discovery.type=single-node"
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
      - "xpack.security.enabled=true"
    ports:
      - "9200:9200"
    networks:
      - shared-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -u elastic:${ELASTIC_PASSWORD} http://localhost:9200/ || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.1
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
      - "ELASTICSEARCH_USERNAME=elastic"
      - "ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}"
    ports:
      - "5601:5601"
    networks:
      - shared-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5601/ || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s

  apm-server:
    container_name: elastic-apm
    image: docker.elastic.co/apm/apm-server:7.16.0
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - "8200:8200"
    networks:
      - shared-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: >
      apm-server -e
         -E elastic.apm.secret.token=${APM_SECRET_TOKEN}
         -E output.elasticsearch.enabled=true
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
         -E output.elasticsearch.protocol=http
         -E output.elasticsearch.username=elastic
         -E output.elasticsearch.password=${ELASTIC_PASSWORD}
         -E output.elasticsearch.ssl.enabled=false
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8200/ || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s

  logging-example:
    container_name: logging-example-api
    image: ${DOCKER_REGISTRY-}logging-example-api
    build:
      context: .
      dockerfile: LoggingExample.Web/Dockerfile
    ports:
      - "5001:8080"
    networks:
      - shared-network
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
      apm-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/api/health-check || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - "Serilog:WriteTo:1:Args:nodeUris=http://elastic:${ELASTIC_PASSWORD}@elasticsearch:9200"
      - "SeriLogConfig:ElasticUri=http://elasticsearch:9200"
      - "SeriLogConfig:ElasticUser=elastic"
      - "SeriLogConfig:ElasticPassword=${ELASTIC_PASSWORD}"
      - "ElasticApm:SecretToken=${APM_SECRET_TOKEN}"
      - "ElasticApm:ServerUrls=http://apm-server:8200"